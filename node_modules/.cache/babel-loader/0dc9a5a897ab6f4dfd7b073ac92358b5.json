{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/anandhan/Desktop/unsplash/src/Components/ProtectedRoute/ProtectedRoute.component.jsx\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux'; //Selectors\n\nimport { selectIsLoggedIn } from '../../Redux/user/user.selectors';\nexport const ProtectedRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      if (isLoggedIn) return /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 32\n      }, this);else return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: '/',\n          state: {\n            from: props.location\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = ProtectedRoute;\nconst mapStateToProps = createStructuredSelector({\n  isLoggedIn: selectIsLoggedIn\n});\nexport default connect(mapStateToProps, null)(ProtectedRoute);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/home/anandhan/Desktop/unsplash/src/Components/ProtectedRoute/ProtectedRoute.component.jsx"],"names":["React","Route","Redirect","createStructuredSelector","connect","selectIsLoggedIn","ProtectedRoute","component","Component","rest","props","isLoggedIn","pathname","state","from","location","mapStateToProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,SAASC,gBAAT,QAAiC,iCAAjC;AAEA,OAAO,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AACnE,sBACE,QAAC,KAAD,OACMA,IADN;AAEE,IAAA,MAAM,EAAGC,KAAD,IAAW;AACjB,UAAIC,UAAJ,EAAgB,oBAAO,QAAC,SAAD,OAAeD;AAAf;AAAA;AAAA;AAAA;AAAA,cAAP,CAAhB,KAEE,oBACE,QAAC,QAAD;AACE,QAAA,EAAE,EAAE;AACFE,UAAAA,QAAQ,EAAE,GADR;AAEFC,UAAAA,KAAK,EAAE;AACLC,YAAAA,IAAI,EAAEJ,KAAK,CAACK;AADP;AAFL;AADN;AAAA;AAAA;AAAA;AAAA,cADF;AAUH;AAfH;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CApBM;KAAMT,c;AAsBb,MAAMU,eAAe,GAAGb,wBAAwB,CAAC;AAC/CQ,EAAAA,UAAU,EAAEN;AADmC,CAAD,CAAhD;AAIA,eAAeD,OAAO,CAACY,eAAD,EAAkB,IAAlB,CAAP,CAA+BV,cAA/B,CAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\n\n//Selectors\nimport { selectIsLoggedIn } from '../../Redux/user/user.selectors';\n\nexport const ProtectedRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (isLoggedIn) return <Component {...props} />;\n        else\n          return (\n            <Redirect\n              to={{\n                pathname: '/',\n                state: {\n                  from: props.location,\n                },\n              }}\n            />\n          );\n      }}\n    />\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isLoggedIn: selectIsLoggedIn,\n});\n\nexport default connect(mapStateToProps, null)(ProtectedRoute);\n"]},"metadata":{},"sourceType":"module"}