{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/anandhan/Desktop/unsplash/src/Components/ModalForm/ModalForm.component.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; //Actions\n\nimport { toggleModal } from '../../Redux/modal/modal.actions.js';\nimport { addImage } from '../../Redux/images/images.actions.js'; //Material UI\n\nimport { withStyles } from '@material-ui/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = theme => ({\n  root: {\n    '& > *': {\n      width: '50vw'\n    }\n  },\n  btnSpace: {\n    '& > *': {\n      margin: theme.spacing(1)\n    },\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginTop: '30px'\n  }\n});\n\nclass ModalForm extends Component {\n  constructor() {\n    super();\n    this.modalForm = null;\n\n    this.handleLabelChange = e => {\n      this.setState({\n        label: e.target.value\n      });\n    };\n\n    this.handleUrlChange = e => {\n      this.setState({\n        url: e.target.value\n      });\n    };\n\n    this.handlePasswordChange = e => {\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.state = {\n      label: '',\n      password: '',\n      url: ''\n    };\n  }\n\n  returnModalForm(type) {\n    let modalForm;\n\n    if (!type) {\n      modalForm = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          id: \"transition-modal-title\",\n          children: \"Are you sure?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-secondary\",\n            label: \"Password\",\n            type: \"password\",\n            variant: \"outlined\",\n            color: \"primary\",\n            fullWidth: true,\n            onChange: this.handlePasswordChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: this.props.classes.btnSpace,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            style: {\n              textTransform: 'none',\n              borderRadius: '24px'\n            },\n            onClick: this.props.toggleModal,\n            size: \"large\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"secondary\",\n            style: {\n              textTransform: 'none',\n              borderRadius: '24px'\n            },\n            size: \"large\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this);\n    } else {\n      modalForm = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          id: \"transition-modal-title\",\n          children: \"Add a new photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-secondary\",\n            label: \"Label\",\n            variant: \"outlined\",\n            color: \"primary\",\n            fullWidth: true,\n            onChange: this.handleLabelChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '30px'\n          },\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-secondary\",\n            label: \"Photo URL\",\n            variant: \"outlined\",\n            color: \"primary\",\n            fullWidth: true,\n            onChange: this.handleUrlChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: this.props.classes.btnSpace,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            style: {\n              textTransform: 'none',\n              borderRadius: '24px'\n            },\n            onClick: this.props.toggleModal,\n            size: \"large\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            style: {\n              textTransform: 'none',\n              borderRadius: '24px'\n            },\n            size: \"large\",\n            onClick: () => {\n              this.props.addImage(img), this.props.toggleModal();\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this);\n    }\n\n    return modalForm;\n  }\n\n  render() {\n    const modalForm = this.returnModalForm(this.props.type);\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: this.props.classes.root,\n      noValidate: true,\n      autoComplete: \"off\",\n      children: modalForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  toggleModal: () => dispatch(toggleModal()),\n  addImage: img => dispatch(addImage(img))\n});\n\nexport default connect(null, mapDispatchToProps)(withStyles(useStyles)(ModalForm));","map":{"version":3,"sources":["/home/anandhan/Desktop/unsplash/src/Components/ModalForm/ModalForm.component.jsx"],"names":["React","Component","connect","toggleModal","addImage","withStyles","TextField","Button","useStyles","theme","root","width","btnSpace","margin","spacing","display","justifyContent","marginTop","ModalForm","constructor","modalForm","handleLabelChange","e","setState","label","target","value","handleUrlChange","url","handlePasswordChange","password","state","returnModalForm","type","props","classes","textTransform","borderRadius","img","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n//Actions\nimport { toggleModal } from '../../Redux/modal/modal.actions.js';\nimport { addImage } from '../../Redux/images/images.actions.js';\n\n//Material UI\nimport { withStyles } from '@material-ui/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = (theme) => ({\n  root: {\n    '& > *': {\n      width: '50vw',\n    },\n  },\n\n  btnSpace: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginTop: '30px',\n  },\n});\n\nclass ModalForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      label: '',\n      password: '',\n      url: '',\n    };\n  }\n\n  modalForm = null;\n\n  handleLabelChange = (e) => {\n    this.setState({ label: e.target.value });\n  };\n\n  handleUrlChange = (e) => {\n    this.setState({ url: e.target.value });\n  };\n\n  handlePasswordChange = (e) => {\n    this.setState({ password: e.target.value });\n  };\n\n  returnModalForm(type) {\n    let modalForm;\n\n    if (!type) {\n      modalForm = (\n        <div>\n          <h2 id=\"transition-modal-title\">Are you sure?</h2>\n\n          <div>\n            <TextField\n              id=\"outlined-secondary\"\n              label=\"Password\"\n              type=\"password\"\n              variant=\"outlined\"\n              color=\"primary\"\n              fullWidth={true}\n              onChange={this.handlePasswordChange}\n            />\n          </div>\n\n          <div className={this.props.classes.btnSpace}>\n            <Button\n              variant=\"contained\"\n              style={{ textTransform: 'none', borderRadius: '24px' }}\n              onClick={this.props.toggleModal}\n              size=\"large\"\n            >\n              Cancel\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              style={{ textTransform: 'none', borderRadius: '24px' }}\n              size=\"large\"\n            >\n              Delete\n            </Button>\n          </div>\n        </div>\n      );\n    } else {\n      modalForm = (\n        <div>\n          <h2 id=\"transition-modal-title\">Add a new photo</h2>\n\n          <div>\n            <TextField\n              id=\"outlined-secondary\"\n              label=\"Label\"\n              variant=\"outlined\"\n              color=\"primary\"\n              fullWidth={true}\n              onChange={this.handleLabelChange}\n            />\n          </div>\n          <div style={{ marginTop: '30px' }}>\n            <TextField\n              id=\"outlined-secondary\"\n              label=\"Photo URL\"\n              variant=\"outlined\"\n              color=\"primary\"\n              fullWidth={true}\n              onChange={this.handleUrlChange}\n            />\n          </div>\n          <div className={this.props.classes.btnSpace}>\n            <Button\n              variant=\"contained\"\n              style={{ textTransform: 'none', borderRadius: '24px' }}\n              onClick={this.props.toggleModal}\n              size=\"large\"\n            >\n              Cancel\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ textTransform: 'none', borderRadius: '24px' }}\n              size=\"large\"\n              onClick={() => {\n                this.props.addImage(img), this.props.toggleModal();\n              }}\n            >\n              Submit\n            </Button>\n          </div>\n        </div>\n      );\n    }\n\n    return modalForm;\n  }\n\n  render() {\n    const modalForm = this.returnModalForm(this.props.type);\n\n    return (\n      <form className={this.props.classes.root} noValidate autoComplete=\"off\">\n        {modalForm}\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  toggleModal: () => dispatch(toggleModal()),\n  addImage: (img) => dispatch(addImage(img)),\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withStyles(useStyles)(ModalForm));\n"]},"metadata":{},"sourceType":"module"}