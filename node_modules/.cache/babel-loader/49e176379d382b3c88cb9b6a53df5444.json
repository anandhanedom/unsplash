{"ast":null,"code":"import { ImagesActionTypes } from './images.types';\nconst INITIAL_STATE = {\n  loading: false,\n  images: [],\n  fetchError: '',\n  uploadSuccess: '',\n  uploadError: '',\n  currentImgId: null\n};\n\nconst imagesReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    // Fetching part\n    case ImagesActionTypes.FETCH_IMAGES_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case ImagesActionTypes.FETCH_IMAGES_SUCCESS:\n      return { ...state,\n        loading: false,\n        images: action.payload,\n        fetchError: ''\n      };\n\n    case ImagesActionTypes.FETCH_IMAGES_FAILURE:\n      return { ...state,\n        loading: false,\n        images: [],\n        fetchError: action.payload\n      };\n\n    case ImagesActionTypes.ADD_IMAGE:\n      return { ...state,\n        images: [...state.images, {\n          id: state.images.length + 1,\n          ...action.payload\n        }]\n      };\n\n    case ImagesActionTypes.REMOVE_IMAGE:\n      return { ...state,\n        images: state.images.filter(img => img.id !== action.payload)\n      };\n\n    case ImagesActionTypes.SET_CURRENT_IMAGE:\n      return { ...state,\n        currentImgId: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default imagesReducer;","map":{"version":3,"sources":["/home/anandhan/Desktop/unsplash/src/Redux/images/images.reducer.js"],"names":["ImagesActionTypes","INITIAL_STATE","loading","images","fetchError","uploadSuccess","uploadError","currentImgId","imagesReducer","state","action","type","FETCH_IMAGES_REQUEST","FETCH_IMAGES_SUCCESS","payload","FETCH_IMAGES_FAILURE","ADD_IMAGE","id","length","REMOVE_IMAGE","filter","img","SET_CURRENT_IMAGE"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,gBAAlC;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,OAAO,EAAE,KADW;AAEpBC,EAAAA,MAAM,EAAE,EAFY;AAGpBC,EAAAA,UAAU,EAAE,EAHQ;AAIpBC,EAAAA,aAAa,EAAE,EAJK;AAKpBC,EAAAA,WAAW,EAAE,EALO;AAMpBC,EAAAA,YAAY,EAAE;AANM,CAAtB;;AASA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGR,aAAT,EAAwBS,MAAxB,KAAmC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE;AACA,SAAKX,iBAAiB,CAACY,oBAAvB;AACE,aAAO,EACL,GAAGH,KADE;AAELP,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAKF,SAAKF,iBAAiB,CAACa,oBAAvB;AACE,aAAO,EACL,GAAGJ,KADE;AAELP,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,MAAM,EAAEO,MAAM,CAACI,OAHV;AAILV,QAAAA,UAAU,EAAE;AAJP,OAAP;;AAOF,SAAKJ,iBAAiB,CAACe,oBAAvB;AACE,aAAO,EACL,GAAGN,KADE;AAELP,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,MAAM,EAAE,EAHH;AAILC,QAAAA,UAAU,EAAEM,MAAM,CAACI;AAJd,OAAP;;AAOF,SAAKd,iBAAiB,CAACgB,SAAvB;AACE,aAAO,EACL,GAAGP,KADE;AAELN,QAAAA,MAAM,EAAE,CACN,GAAGM,KAAK,CAACN,MADH,EAEN;AAAEc,UAAAA,EAAE,EAAER,KAAK,CAACN,MAAN,CAAae,MAAb,GAAsB,CAA5B;AAA+B,aAAGR,MAAM,CAACI;AAAzC,SAFM;AAFH,OAAP;;AAQF,SAAKd,iBAAiB,CAACmB,YAAvB;AACE,aAAO,EACL,GAAGV,KADE;AAELN,QAAAA,MAAM,EAAEM,KAAK,CAACN,MAAN,CAAaiB,MAAb,CAAqBC,GAAD,IAASA,GAAG,CAACJ,EAAJ,KAAWP,MAAM,CAACI,OAA/C;AAFH,OAAP;;AAKF,SAAKd,iBAAiB,CAACsB,iBAAvB;AACE,aAAO,EACL,GAAGb,KADE;AAELF,QAAAA,YAAY,EAAEG,MAAM,CAACI;AAFhB,OAAP;;AAKF;AACE,aAAOL,KAAP;AA9CJ;AAgDD,CAjDD;;AAmDA,eAAeD,aAAf","sourcesContent":["import { ImagesActionTypes } from './images.types';\n\nconst INITIAL_STATE = {\n  loading: false,\n  images: [],\n  fetchError: '',\n  uploadSuccess: '',\n  uploadError: '',\n  currentImgId: null,\n};\n\nconst imagesReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    // Fetching part\n    case ImagesActionTypes.FETCH_IMAGES_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case ImagesActionTypes.FETCH_IMAGES_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        images: action.payload,\n        fetchError: '',\n      };\n\n    case ImagesActionTypes.FETCH_IMAGES_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        images: [],\n        fetchError: action.payload,\n      };\n\n    case ImagesActionTypes.ADD_IMAGE:\n      return {\n        ...state,\n        images: [\n          ...state.images,\n          { id: state.images.length + 1, ...action.payload },\n        ],\n      };\n\n    case ImagesActionTypes.REMOVE_IMAGE:\n      return {\n        ...state,\n        images: state.images.filter((img) => img.id !== action.payload),\n      };\n\n    case ImagesActionTypes.SET_CURRENT_IMAGE:\n      return {\n        ...state,\n        currentImgId: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default imagesReducer;\n"]},"metadata":{},"sourceType":"module"}