{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/anandhan/Desktop/unsplash/src/Components/ModalForm/ModalForm.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { connect } from 'react-redux'; //Actions\n\nimport { toggleModal } from '../../Redux/modal/modal.actions.js'; //Material UI\n\nimport { withStyles } from '@material-ui/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nconst useStyles = withStyles(theme => ({\n  root: {\n    '& > *': {\n      width: '50vw'\n    }\n  },\n  btnSpace: {\n    '& > *': {\n      margin: theme.spacing(1)\n    },\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginTop: '30px'\n  }\n}));\n\nconst ModalForm = props => {\n  _s();\n\n  const classes = useStyles();\n  let modalForm;\n\n  if (!props.type) {\n    modalForm = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"transition-modal-title\",\n        children: \"Are you sure?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-secondary\",\n          label: \"Password\",\n          type: \"password\",\n          variant: \"outlined\",\n          color: \"primary\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.btnSpace,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          style: {\n            textTransform: 'none',\n            borderRadius: '24px'\n          },\n          onClick: props.toggleModal,\n          size: \"large\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          style: {\n            textTransform: 'none',\n            borderRadius: '24px'\n          },\n          size: \"large\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  } else {\n    modalForm = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"transition-modal-title\",\n        children: \"Add a new photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-secondary\",\n          label: \"Label\",\n          variant: \"outlined\",\n          color: \"primary\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '30px'\n        },\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-secondary\",\n          label: \"Photo URL\",\n          variant: \"outlined\",\n          color: \"primary\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.btnSpace,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          style: {\n            textTransform: 'none',\n            borderRadius: '24px'\n          },\n          onClick: props.toggleModal,\n          size: \"large\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          style: {\n            textTransform: 'none',\n            borderRadius: '24px'\n          },\n          size: \"large\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    children: modalForm\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalForm, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = ModalForm;\n\nconst mapDispatchToProps = dispatch => ({\n  toggleModal: () => dispatch(toggleModal())\n});\n\nexport default connect(null, mapDispatchToProps)(ModalForm);\nwithStyles(useStyles)(ModalForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalForm\");","map":{"version":3,"sources":["/home/anandhan/Desktop/unsplash/src/Components/ModalForm/ModalForm.component.jsx"],"names":["React","connect","toggleModal","withStyles","TextField","Button","useStyles","theme","root","width","btnSpace","margin","spacing","display","justifyContent","marginTop","ModalForm","props","classes","modalForm","type","textTransform","borderRadius","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\n//Actions\nimport { toggleModal } from '../../Redux/modal/modal.actions.js';\n\n//Material UI\nimport { withStyles } from '@material-ui/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = withStyles((theme) => ({\n  root: {\n    '& > *': {\n      width: '50vw',\n    },\n  },\n\n  btnSpace: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginTop: '30px',\n  },\n}));\n\nconst ModalForm = (props) => {\n  const classes = useStyles();\n  let modalForm;\n\n  if (!props.type) {\n    modalForm = (\n      <div>\n        <h2 id=\"transition-modal-title\">Are you sure?</h2>\n\n        <div>\n          <TextField\n            id=\"outlined-secondary\"\n            label=\"Password\"\n            type=\"password\"\n            variant=\"outlined\"\n            color=\"primary\"\n            fullWidth={true}\n          />\n        </div>\n\n        <div className={classes.btnSpace}>\n          <Button\n            variant=\"contained\"\n            style={{ textTransform: 'none', borderRadius: '24px' }}\n            onClick={props.toggleModal}\n            size=\"large\"\n          >\n            Cancel\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            style={{ textTransform: 'none', borderRadius: '24px' }}\n            size=\"large\"\n          >\n            Delete\n          </Button>\n        </div>\n      </div>\n    );\n  } else {\n    modalForm = (\n      <div>\n        <h2 id=\"transition-modal-title\">Add a new photo</h2>\n\n        <div>\n          <TextField\n            id=\"outlined-secondary\"\n            label=\"Label\"\n            variant=\"outlined\"\n            color=\"primary\"\n            fullWidth={true}\n          />\n        </div>\n        <div style={{ marginTop: '30px' }}>\n          <TextField\n            id=\"outlined-secondary\"\n            label=\"Photo URL\"\n            variant=\"outlined\"\n            color=\"primary\"\n            fullWidth={true}\n          />\n        </div>\n        <div className={classes.btnSpace}>\n          <Button\n            variant=\"contained\"\n            style={{ textTransform: 'none', borderRadius: '24px' }}\n            onClick={props.toggleModal}\n            size=\"large\"\n          >\n            Cancel\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ textTransform: 'none', borderRadius: '24px' }}\n            size=\"large\"\n          >\n            Submit\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      {modalForm}\n    </form>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  toggleModal: () => dispatch(toggleModal()),\n});\n\nexport default connect(null, mapDispatchToProps)(ModalForm);\n\nwithStyles(useStyles)(ModalForm);\n"]},"metadata":{},"sourceType":"module"}